package GUI;


// This code was partially generated by Visual for Eclipse (v4all)
//
// *******************************************************************************
// 
// V4ALL for Swing)
// 
// (c) Ramin Assisi, Computer Scientist, Switzerland 2003
// 
// 
// *******************************************************************************
// 


import org.eclipse.swt.*;
import org.eclipse.swt.graphics.*;
import org.eclipse.swt.widgets.*;
import org.eclipse.swt.custom.*;
import org.eclipse.swt.layout.*;


public class Gui_1
{

/**
 * user code fields V4ALL Entry Level
 */
// user code begin FIELDS {1} Swing
// user code end
// user code begin FIELDS {1} SWT
// user code end
// user code begin FIELDS {1} HTML
// user code end
// user code begin FIELDS {1} Eclipse
// user code end
// user code begin FIELDS {1} C#
// user code end

/**
 * user code methods V4ALL Entry Level
 */
// user code begin METHODS {1} Swing
// user code end
// user code begin METHODS {1} SWT
// user code end
// user code begin METHODS {1} HTML
// user code end
// user code begin METHODS {1} Eclipse
// user code end
// user code begin METHODS {1} C#
// user code end


/**
* Initializes connections
* @exception java.lang.Exception The exception description.
*/
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
    // user code begin {1} Swing
    // user code end
    // user code begin {1} SWT
    // user code end
    // user code begin {1} HTML
    // user code end
    // user code begin {1} Eclipse
    // user code end
    // user code begin {1} C#
    // user code end
    // user code begin {2} Swing
    // user code end
    // user code begin {2} SWT
    // user code end
    // user code begin {2} HTML
    // user code end
    // user code begin {2} Eclipse
    // user code end
    // user code begin {2} C#
    // user code end
}
/**
* Return the Frame101 property value.
* @return Shell
*/
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public Shell getFrame101(){
	if(ivjFrame101==null){
        try {
			Display display = new Display();
			ivjFrame101 = new Shell(display);
           ivjFrame101.setBounds(40, 220, 400, 240);
           ivjFrame101.setForeground(new Color(null, 0, 0, 0));
	         int height = java.awt.Toolkit.getDefaultToolkit().getScreenSize().height;
	         int width  = java.awt.Toolkit.getDefaultToolkit().getScreenSize().width;
           ivjFrame101.setLocation(width/2 - 400/2, height/2 - 240/2);
          // user code begin {1} Swing
          // user code end
          // user code begin {1} SWT
          // user code end
          // user code begin {1} HTML
          // user code end
          // user code begin {1} Eclipse
          // user code end
          // user code begin {1} C#
          // user code end
        } catch (java.lang.Throwable ivjExc) {
          // user code begin {1} Swing
          // user code end
          // user code begin {1} SWT
          // user code end
          // user code begin {1} HTML
          // user code end
          // user code begin {1} Eclipse
          // user code end
          // user code begin {1} C#
          // user code end
        handleException(ivjExc);
        }
	}
	return ivjFrame101;
}
/** V4ALL Entry Level
* Return the ToolBar101 property value.
* @return org.eclipse.swt.widgets.ToolBarl
*/
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private org.eclipse.swt.widgets.ToolBar getToolBar101() {
    if (ivjToolBar101 == null) {
        try {
           ivjToolBar101 = new org.eclipse.swt.widgets.ToolBar(getFrame101(), SWT.FLAT);
           // user code begin {1} Swing
           // user code end
           // user code begin {1} SWT
           // user code end
           // user code begin {1} HTML
           // user code end
           // user code begin {1} Eclipse
           // user code end
           // user code begin {1} C#
           // user code end
        } catch (java.lang.Throwable ivjExc) {
           // user code begin {2} Swing
           // user code end
           // user code begin {2} SWT
           // user code end
           // user code begin {2} HTML
           // user code end
           // user code begin {2} Eclipse
           // user code end
           // user code begin {2} C#
           // user code end
        handleException(ivjExc);
        }
    }
    return ivjToolBar101;
}


/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
    try {
        // user code begin {1} Swing
        // user code end
        // user code begin {1} SWT
        // user code end
        // user code begin {1} HTML
        // user code end
        // user code begin {1} Eclipse
        // user code end
        // user code begin {1} C#
        // user code end
        initConnections();
        // user code begin {2} Swing
        // user code end
        // user code begin {2} SWT
        // user code end
        // user code begin {2} HTML
        // user code end
        // user code begin {2} Eclipse
        // user code end
        // user code begin {2} C#
        // user code end
     }
     catch (java.lang.Throwable ivjExc) {
         handleException(ivjExc);
     }
}



/** V4ALL Entry Level
* Called whenever the part throws an exception.
* @param exception java.lang.Throwable
*/
private void handleException(java.lang.Throwable exception) {
	/* Uncomment the following lines to print uncaught exceptions to stdout */
    // System.out.println("--------- UNCAUGHT EXCEPTION ---------");
    // exception.printStackTrace(System.out);
}



private Shell ivjFrame101 = null;
private org.eclipse.swt.widgets.ToolBar ivjToolBar101 = null;
/**
 * Gui_1 constructor comment.
 * @param title java.lang.String
 */
public Gui_1(String title){
	getFrame101().setText(title);
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
 public static void main(java.lang.String[] args) {
    try {
        Gui_1 aGui_1;
		aGui_1 = new Gui_1("Frame");
		aGui_1.getFrame101();
		aGui_1.getToolBar101();
		aGui_1.getFrame101().open();
		while (! aGui_1.getFrame101().isDisposed()) {
			if (! aGui_1.getFrame101().getDisplay().readAndDispatch())
				aGui_1.getFrame101().getDisplay().sleep();
		}
		aGui_1.getFrame101().dispose();
    }
    catch (Throwable exception) {
        System.err.println("Exception occurred in main() of javax.swing.JFrame");
        exception.printStackTrace(System.out);
    }
 }


}


